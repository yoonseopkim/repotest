- name: Configure Kubernetes prerequisites
  hosts: kubernetes
  tasks:
    - name: Update system
      dnf:
        name: '*'
        state: latest
  
    - name: Install dependencies
      dnf:
        name:
          - dnf-plugin-versionlock
          - ca-certificates
          - pip
          - containerd
        state: present

    - name: Disable swap
      shell: |
        swapoff -a

    - name: Configure Kubernetes prerequisites
      copy:
        dest: /etc/modules-load.d/k8s.conf
        content: |
          overlay
          br_netfilter

    - name: Load kernel modules
      modprobe:
        name: "{{ item }}"
        state: present
      loop:
        - overlay
        - br_netfilter

    - name: Configure sysctl parameters
      sysctl:
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        state: present
        sysctl_file: /etc/sysctl.d/k8s.conf
        reload: yes
      loop:
        - { name: 'net.bridge.bridge-nf-call-iptables', value: '1' }
        - { name: 'net.bridge.bridge-nf-call-ip6tables', value: '1' }
        - { name: 'net.ipv4.ip_forward', value: '1' }

    - name: Create containerd directory
      file:
        path: /etc/containerd
        state: directory
        owner: root
        group: root
        mode: '0750'

    - name: Save containerd settings to file
      shell: |
        containerd config default | tee /etc/containerd/config.toml > /dev/null

    - name: Replace SystemdCgroup with SystemCgroup
      replace:
        path: /etc/containerd/config.toml
        regexp: 'SystemdCgroup = false'
        replace: 'SystemdCgroup = true'

    - name: Restart containerd
      systemd:
        name: containerd
        state: restarted
        enabled: yes
        daemon_reload: yes

    - name: Add Kubernetes repo
      yum_repository:
        name: kubernetes
        description: Kubernetes
        baseurl: "{{ ansible_kubernetes_repo_url }}"
        gpgkey: "{{ ansible_kubernetes_repo_url }}/repodata/repomd.xml.key"
        gpgcheck: yes
        enabled: yes
        exclude: 
          - kubelet
          - kubeadm
          - kubectl
          - cri-tools
          - kubernetes-cni

    - name: Set SELinux mode to permissive
      selinux:
        policy: targeted
        state: permissive

    - name: Replace SELinux mode to permissive
      lineinfile:
        path: /etc/selinux/config
        regexp: '^SELINUX=enforcing'
        line: 'SELINUX=permissive'
        state: present

    - name: Update system
      dnf:
        name: '*'
        state: latest

    - name: Install Kubernetes packages
      dnf:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present
        disable_excludes: kubernetes

    - name: Hold Kubernetes packages version
      community.general.dnf_versionlock:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present
        
    - name: Start and enable kubelet
      systemd:
        name: kubelet
        state: started
        enabled: yes
        daemon_reload: yes